{"ast":null,"code":"var _jsxFileName = \"/Users/angelagiribet/Documents/GEIADE/4t curs/1r semestre/Parallel and Distributed Systems/pds-project-23/todo/src/main/frontend/src/components/EditTodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditTodoForm = ({\n  editTodo,\n  task\n}) => {\n  _s();\n  const [value, setValue] = useState(task.task);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Make a PUT request to your backend endpoint to update the task\n      const response = await fetch(`http://localhost:8080/api/todos/${task.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          task: value\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update task');\n      }\n      editTodo(value, task.id);\n      setValue('');\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"TodoForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"todo-input\",\n      value: value,\n      placeholder: \"Update task\",\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"todo-btn\",\n      children: \"Update task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(EditTodoForm, \"nG3EG0o99aGVU7LYFyipZY1IvMA=\");\n_c = EditTodoForm;\nvar _c;\n$RefreshReg$(_c, \"EditTodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditTodoForm","editTodo","task","_s","value","setValue","handleSubmit","e","preventDefault","response","fetch","id","method","headers","body","JSON","stringify","ok","Error","error","console","className","onSubmit","children","type","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/angelagiribet/Documents/GEIADE/4t curs/1r semestre/Parallel and Distributed Systems/pds-project-23/todo/src/main/frontend/src/components/EditTodoForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport const EditTodoForm = ({ editTodo, task }) => {\n    const [value, setValue] = useState(task.task);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        try {\n            // Make a PUT request to your backend endpoint to update the task\n            const response = await fetch(`http://localhost:8080/api/todos/${task.id}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ task: value }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to update task');\n            }\n\n            editTodo(value, task.id);\n            setValue('');\n        } catch (error) {\n            console.error('Error updating task:', error);\n        }\n    };\n\n    return (\n        <form className='TodoForm' onSubmit={handleSubmit}>\n            <input\n                type='text'\n                className='todo-input'\n                value={value}\n                placeholder='Update task'\n                onChange={(e) => setValue(e.target.value)}\n            />\n            <button type='submit' className='todo-btn'>\n                Update task\n            </button>\n        </form>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACK,IAAI,CAACA,IAAI,CAAC;EAE7C,MAAMI,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCR,IAAI,CAACS,EAAG,EAAC,EAAE;QACvEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,IAAI,EAAEE;QAAM,CAAC;MACxC,CAAC,CAAC;MAEF,IAAI,CAACK,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MAEAjB,QAAQ,CAACG,KAAK,EAAEF,IAAI,CAACS,EAAE,CAAC;MACxBN,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIpB,OAAA;IAAMsB,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEhB,YAAa;IAAAiB,QAAA,gBAC9CxB,OAAA;MACIyB,IAAI,EAAC,MAAM;MACXH,SAAS,EAAC,YAAY;MACtBjB,KAAK,EAAEA,KAAM;MACbqB,WAAW,EAAC,aAAa;MACzBC,QAAQ,EAAGnB,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACoB,MAAM,CAACvB,KAAK;IAAE;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFhC,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAACH,SAAS,EAAC,UAAU;MAAAE,QAAA,EAAC;IAE3C;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf,CAAC;AAAC5B,EAAA,CAzCWH,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}